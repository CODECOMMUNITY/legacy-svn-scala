#!/usr/bin/env bash
#
# Runs the ant build while first resolving artifacts.
# At the moment: ./ant-starless test-1
#

. $(dirname $0)/tools/bash-fns.sh

[[ $# -gt 0 ]] || { echo "Usage: $0 <starr version>" ; exit 1; }

# declare -r base_directory=$(cd $(dirname $0) ; pwd)
declare -r starr_dir="$script_directory/lib"
declare -r libraryJar="$starr_dir/scala-library.jar"

# reads the version from the jar properties file
libraryJarVersion () {  
  local line=$(
    cd $(mktemp -dt starrless) && 
    jar xf "$libraryJar" library.properties &&
    grep ^version.number= library.properties &&
    rm -f library.properties
  )
  echo ${line#version.number=}
}

declare -r desiredStarr="$1"
declare -r currentStarr=$(libraryJarVersion)

# This will load a scala-starr jar into the desired location.
# Arg 1: Artifact name
# Arg 2: Artifact version
# Note: organization and repository are all assumed to be the same.
function loadStarrJar() {
  local name="$1"
  local jarname="$name-$desiredStarr.jar"
  local urlbase="http://typesafe.artifactoryonline.com/typesafe/starr-releases/org/scala-lang/bootstrap"
  local url="$urlbase/$name/$desiredStarr/$jarname"

  # todo: we should be going through the ivy cache.
  # the only thing to download with curl is something to get dependencies
  # correctly (could be sbt, or ivy directly, or something lighter weight)
  if which curl >/dev/null; then
    echo "downloading $jarname..."
    set +e
    http_code=$(curl --write-out '%{http_code}' --silent --fail --output "$starr_dir/$jarname" "$url")
    if (( $? != 0 )); then
      echo "Error downloading $name: response code $http_code"
      echo "$url"
      exit 1
    fi
    set -e
  else
    cat <<EOM
No means of downloading $name.jar found.   Either:
 * install curl
 * install wget
 * manually download: $url
        and place at: $outjar
EOM
    return 0
  fi
}

# This will load a version of star and update the starr_version_file with the new version.
function loadStarr() {
  for jar in scala-library scala-compiler forkjoin fjbg msil jline; do
    loadStarrJar $jar
  done
}

# Check to see if we should load starr.
[[ "$currentStarr" == "$desiredStarr" ]] || loadStarr

# Now, delegate to ANT.
# TODO - make sure ANT_OPTS are exported or whatever needs to happen here...
ant "$@"
